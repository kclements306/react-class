{"ast":null,"code":"var _jsxFileName = \"/Users/kenclements/react-class/class/chapter7/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport classes from '../containers/App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        id: '0',\n        name: 'Ken',\n        age: 23\n      }, {\n        id: '1',\n        name: 'Bob',\n        age: 25\n      }, {\n        id: '2',\n        name: 'Becca',\n        age: 21\n      }],\n      otherSate: 'some other value',\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    console.log('[App.js] constructor');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDirevedStateFromProps', props);\n    return state;\n  }\n\n  componentDidMount() {\n    console.log('App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.App,\n      children: [/*#__PURE__*/_jsxDEV(Cockpit, {\n        title: this.props.appTitle,\n        showPersons: this.state.showPersons,\n        persons: this.state.persons,\n        clicked: this.togglePersonsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), persons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kenclements/react-class/class/chapter7/src/containers/App.js"],"names":["React","Component","classes","Persons","Cockpit","App","constructor","props","state","persons","id","name","age","otherSate","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","findIndex","p","person","target","value","togglePersonsHandler","doesShow","console","log","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","render","appTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classes from '../containers/App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[App.js] constructor');\n  }\n\n  state = {\n    persons: [\n      { id: '0', name: 'Ken', age: 23 },\n      { id: '1', name: 'Bob', age: 25 },\n      { id: '2', name: 'Becca', age: 21 }\n    ],\n    otherSate: 'some other value',\n    showPersons: false\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDirevedStateFromProps', props);\n    return state;\n  }\n\n  componentDidMount() {\n    console.log('App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n  \n  deletePersonHandler = (personIndex) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( {persons: persons } );\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow})\n  }\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = <Persons \n          persons={this.state.persons}\n          clicked={this.deletePersonHandler}\n          changed={this.nameChangedHandler} />;\n    }\n\n    return (\n      <div className={classes.App}>\n        <Cockpit\n          title={this.props.appTitle}\n          showPersons={this.state.showPersons}\n          persons={this.state.persons}\n          clicked={this.togglePersonsHandler} />\n        {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}